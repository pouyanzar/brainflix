{"version":3,"sources":["Components/header.js","Components/Upload.js","Components/Comment.js","Components/CommentDisplay.js","Components/AddComment.js","Components/mainVideo.js","Components/left.js","Components/video.js","Components/Sidebar.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","src","alt","type","name","Component","Upload","Comment","this","props","timestamp_default","timestamp","comment","CommentDisplay","mainVideo","currentVideo","map","video","i","Comment_Comment","key","AddComment","changeHandler","e","preventDefault","_this","commentHandler","target","value","id","placeholder","onChange","concat","MainVideo","controls","title","views","thumbsUp","thumbsDown","channel","subscriberCount","AddComment_AddComment","CommentDisplay_CommentDisplay","comments","React","Left","Components_mainVideo","Video","image","duration","Sidebar","videos","videoArray","Components_video","Main","prevProp","preState","match","params","onIdChange","left","Components_Sidebar","withRouter","baseUrl","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","description","handleIdChange","fetch","then","response","json","setState","onCommentChange","commentId","init","method","body","JSON","stringify","headers","Content-Type","res","res2","console","log","_this2","data","_this3","BrowserRouter","header","Switch","Route","path","render","Components_Main","assign","bind","component","Redirect","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mSAqBeA,mLAfP,OAEIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeG,IAAI,kCAAkCC,IAAI,UACpFP,EAAAC,EAAAC,cAAA,QAAMC,UAAW,UACbH,EAAAC,EAAAC,cAAA,SAAOM,KAAK,OAAOC,KAAK,cACxBT,EAAAC,EAAAC,cAAA,UAAQC,UAAY,kBAAiBH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,2BAA2BC,IAAI,aAEjFP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAUL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBG,IAAI,kCAAkCC,IAAI,YAC7FP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBG,IAAI,kCAAkCC,IAAI,wBAbzEG,aCCAC,0LAEjB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAUL,EAAAC,EAAAC,cAAA,OAAKI,IAAI,iCAAiCC,IAAI,YACjEP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,0BACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,wCAN4BO,+BCAfE,mLAEjB,OACIZ,EAAAC,EAAAC,cAAA,WAASC,UAAU,YACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBU,KAAKC,MAAML,KACxCT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAiBH,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KAAaY,KAAKC,MAAME,aAE3DhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBU,KAAKC,MAAMG,iBAPlBP,aCAhBQ,mLAGjB,IAAIC,EAAYN,KAAKC,MAAMM,aAC3B,OAAgB,MAAbD,EAEDA,EAAUE,IAAI,SAACC,EAAMC,GACjB,OACEvB,EAAAC,EAAAC,cAACsB,EAAD,CAASC,IAAMF,EACbd,KAAQa,EAAMb,KACdQ,QAAWK,EAAML,QACjBD,UAAaM,EAAMN,cAKb,eAhBwBN,aCAvBgB,6MAGjBC,cAAgB,SAACC,GAEbA,EAAEC,iBAGFC,EAAKhB,MAAMiB,eAFA,OAEoBH,EAAEI,OAAOC,MAD/B,EAC0CH,EAAKhB,MAAMoB,6EAIlE,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBG,IAAI,kCAAkCC,IAAI,gBAC9EP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACjBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBACb8B,MAAOpB,KAAKC,MAAMG,QAClBT,KAAK,OACLC,KAAK,YACL0B,YAAY,uBACZC,SAAUvB,KAAKc,gBACnB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAAlB,UACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,WAAAgC,OAAaxB,KAAKC,MAAMoB,GAAxB,cAAuClC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yBAAyBK,KAAK,SAASyB,MAAM,uBAxBjFvB,aCkCzB4B,mLA5BP,OACItC,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SAAOI,IAAKO,KAAKC,MAAMQ,MAAQ,gDAAiDiB,UAAQ,IACxFvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBU,KAAKC,MAAM0B,OACxCxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeU,KAAKC,MAAM2B,MAAvC,UACAzC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,8BAA8BC,IAAI,cAAcM,KAAKC,MAAM4B,UACpG1C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,gCAAgCC,IAAI,gBAAiBM,KAAKC,MAAM6B,YACzG3C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,0BAA0BC,IAAI,UAAvE,UAEJP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBI,IAAI,KAC3CP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,UAAKW,KAAKC,MAAM8B,SAChB5C,EAAAC,EAAAC,cAAA,0CAEJF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,yBAAsBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAA0BU,KAAKC,MAAM+B,mBAGpH7C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAb,aACAH,EAAAC,EAAAC,cAAC4C,EAAD,CAAYZ,GAAMrB,KAAKC,MAAMoB,GAAIH,eAAgBlB,KAAKC,MAAMiB,iBAC5D/B,EAAAC,EAAAC,cAAC6C,EAAD,CAAgB3B,aAAgBP,KAAKC,MAAMkC,mBA1BnCC,IAAMvC,WCwBfwC,mLArBP,IAAI/B,EAAYN,KAAKC,MAAMM,aAC3B,OACYpB,EAAAC,EAAAC,cAACiD,EAAD,CAAWX,MAASrB,EAAUqB,MAC9BC,MAAStB,EAAUsB,MACnBC,SAAYvB,EAAUuB,SACtBC,WAAcxB,EAAUwB,WACxBC,QAAWzB,EAAUyB,QACrBC,gBAAmB1B,EAAU0B,gBAC7BvB,MAASH,EAAUG,MACnB0B,SAAU7B,EAAU6B,SACpBd,GAAIf,EAAUe,GACdH,eAAgBlB,KAAKC,MAAMiB,wBAf5BrB,aCqBJ0C,mLAhBP,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBG,IAAKO,KAAKC,MAAMuC,MAAO9C,IAAKM,KAAKC,MAAM0B,QACzExC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBU,KAAKC,MAAMwC,WAE/CtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAKW,KAAKC,MAAM0B,OAChBxC,EAAAC,EAAAC,cAAA,UAAKW,KAAKC,MAAM8B,SAChB5C,EAAAC,EAAAC,cAAA,UAAKW,KAAKC,MAAM2B,MAAQ,mBAfxBQ,IAAMvC,WC6BX6C,mLAvBP,IAAIC,EAAS3C,KAAKC,MAAM2C,WAExB,OAAQzD,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACvBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WACEqD,EAAQnC,IAAI,SAACC,EAAOC,GAElB,OAAQvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMqB,IAAKF,EAAGlB,GAAI,WAAaiB,EAAMY,IAAIlC,EAAAC,EAAAC,cAACwD,EAAD,CAAOjC,IAAMF,EAC1D8B,MAAO/B,EAAM+B,MACbb,MAASlB,EAAMkB,MACfI,QAAWtB,EAAMsB,QACjBU,SAAYhC,EAAMgC,SAClBb,MAASnB,EAAMmB,MACfP,GAAKZ,EAAMY,gBAhBRe,IAAMvC,mBCCvBiD,6LAEeC,EAAUC,GAExBD,EAASE,MAAMC,OAAO7B,KAAOrB,KAAKC,MAAMgD,MAAMC,OAAO7B,IAEtDrB,KAAKC,MAAMkD,WAAWnD,KAAKC,MAAMgD,MAAMC,OAAO7B,qCAIhD,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC+D,EAAD,CAAM7C,aAAeP,KAAKC,MAAMK,UAAYY,eAAgBlB,KAAKC,MAAMiB,iBACvE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACgE,EAAD,CAAST,WAAc5C,KAAKC,MAAM0C,kBAd3B9C,aAqBJyD,cAAWR,mCClBtBS,EAAS,wBA8FEC,cA3Fb,SAAAA,IAAa,IAAAvC,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAzD,KAAAwD,IACbvC,EAAAwC,OAAAE,EAAA,EAAAF,CAAAzD,KAAAyD,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7D,QAEA8D,MAAQ,CACNnB,OAAO,GACPrC,UAAW,CACTe,GAAI,EACJM,MAAO,kEACPoC,YAAa,glBACbhC,QAAS,MACTH,MAAO,QACPa,SAAU,QACVD,MAAO,mCACP/B,MAAO,6CACPoB,SAAU,MACVC,WAAY,IACZE,gBAAiB,OACjBG,SAAU,CACR,CACIvC,KAAM,QACNQ,QAAS,6BACTiB,GAAM,EACNlB,UAAa,eAEjB,CACIP,KAAM,MACNQ,QAAS,kCACTiB,GAAM,EACNlB,UAAa,kBA5BVc,EA2Cb+C,eAAiB,SAAC3C,GAGhB4C,MAAK,GAAAzC,OAAI+B,EAAJ,YAAA/B,OAAsBH,EAAtB,kDACJ6C,KAAK,SAAAC,GAAa,OAAOA,EAASC,SAClCF,KAAK,SAAAzD,GAAU,OAAOQ,EAAKoD,SAAS,CAAC/D,UAAUG,OAhDrCQ,EAmDbqD,gBAAkB,SAAC1E,EAAKQ,EAAQmE,EAAUlD,GAGxC,IAAImD,EAAM,CACRC,OAAO,OACPC,KAAMC,KAAKC,UAAU,CAAChF,KAAKA,EAAMQ,QAAQA,EAASiB,GAAGkD,IACrDM,QAAQ,CAACC,eAAe,qBAG5Bb,MAAK,GAAAzC,OAAI+B,EAAJ,YAAA/B,OAAsBH,EAAtB,0DAAiFmD,GACrFN,KAAK,SAAAa,GAAG,OAAGA,EAAIX,SACfF,KAAK,SAACc,GAASC,QAAQC,IAAIF,KAG1Bf,MAAK,GAAAzC,OAAI+B,EAAJ,YAAA/B,OAAsBH,EAAtB,kDACJ6C,KAAK,SAAAC,GAAa,OAAOA,EAASC,SAClCF,KAAK,SAAAzD,GAAU,OAAOQ,EAAKoD,SAAS,CAAC/D,UAAUG,OAnErCQ,mFAkCb,IAAAkE,EAAAnF,KAIgBiE,MAAMV,EAFR,wDAGJW,KAAK,SAAAC,GAAa,OAAOA,EAASC,SACzCF,KAAK,SAAAkB,GAAS,OAAOD,EAAKd,SAAS,CAAC1B,OAAOyC,uCA+BrC,IAAAC,EAAArF,KAEP,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACErG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAQ,kBAAMxG,EAAAC,EAAAC,cAACuG,EAADnC,OAAAoC,OAAA,CAAM1C,WAAYkC,EAAKrB,eAAgB9C,eAAgBmE,EAAKf,gBAAgBwB,KAAKT,IAAWA,EAAKvB,WACzI3E,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAK,uBAAuBC,OAAQ,kBAAKxG,EAAAC,EAAAC,cAAC4C,EAAD,SAChD9C,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAK,UAAUK,UAAWjG,IACjCX,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAK,IAAKC,OAAQ,kBAAMxG,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAUxG,GAAI,4BAnF3CK,aCEEoG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MACvB,2DCZNoD,IAASV,OAAOxG,EAAAC,EAAAC,cAACiH,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,KAAK,SAAA0C,GACjCA,EAAaC","file":"static/js/main.6042470f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nclass Header extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n\r\n            <header className=\"header\">\r\n               <Link to='/'><img className=\"header__logo\" src='/Assets/Icons/BrainFlixLogo.svg' alt='Logo' /></Link>\r\n                <form className =\"search\">\r\n                    <input type=\"text\" name=\"textInput\"/>\r\n                    <button className = \"search__button\"><img src='/Assets/Icons/Search.svg' alt='search' /></button>\r\n                </form>\r\n                <Link to='/Upload'><img className=\"header__upload\" src='/Assets/Icons/ContentUpload.svg' alt='upload' /></Link>\r\n                <img className=\"header__profilePic\" src='/Assets/Images/john_gibbons.jpg' alt='profile-pic' />\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport '../CSS/upload.css'\r\nexport default class Upload extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"upload\">\r\n        <Link to='/Upload'><img src='/Assets/Icons/Large Upload.svg' alt='Upload'/></Link>\r\n        <p className='upload__h4'>Select files to upload</p>\r\n        <p className='upload__h5'>Or drag and drop video files</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Timestamp from 'react-timestamp';\r\n\r\nexport default class Comment extends Component {\r\n  render() {\r\n    return (\r\n        <section className=\"comments\">\r\n          <p className=\"comments__name\">{this.props.name} \r\n            <span className=\"comments__time\"><Timestamp >{this.props.timestamp}</Timestamp></span>\r\n          </p>\r\n          <p className=\"comments__comment\">{this.props.comment}</p>\r\n        </section>\r\n    )\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport Comment from './Comment'\r\nexport default class CommentDisplay extends Component {\r\n  render() {\r\n    \r\n    let mainVideo = this.props.currentVideo;\r\n    if(mainVideo != null)\r\n    return (\r\n      mainVideo.map((video,i) => {\r\n          return(\r\n            <Comment key= {i}\r\n              name = {video.name}\r\n              comment = {video.comment}\r\n              timestamp = {video.timestamp}\r\n              />)\r\n               })\r\n           )\r\n           else{\r\n             return 'empty'\r\n           }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AddComment extends Component {\r\n\r\n\r\n    changeHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let name = \"John\";\r\n        let id = 3\r\n        this.props.commentHandler(name,e.target.value, id, this.props.id);\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"comments__public\">\r\n         <img className=\"header__profilePic\" src=\"/Assets/Images/john_gibbons.jpg\" alt=\"profile-pic\"/>\r\n         <form className=\"comments__form\">\r\n        <input className=\"comments__form--input\"\r\n            value={this.props.comment}\r\n            type=\"text\"\r\n            name=\"textInput\"\r\n            placeholder=\"Add a public comment\"\r\n            onChange={this.changeHandler} />\r\n        <div className=\"comments__form--button\">    \r\n            <button className=\"comments__form--cancel\">Cancel</button>\r\n            <Link to={`/videos/${this.props.id}/comments`}><input className=\"comments__form--submit\" type=\"submit\" value=\"Comment\" /></Link>\r\n        </div>\r\n      </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CommentDisplay from './CommentDisplay';\r\nimport AddComment from './AddComment';\r\n\r\nclass MainVideo extends React.Component\r\n{\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <section className=\"video\">\r\n                <video src={this.props.video + '?api_key=c1a04dd4-7ee0-41b1-9822-b92dcec3b769'} controls></video>\r\n                <p className=\"video__title\">{this.props.title}</p>\r\n                <div className=\"video__detail\">\r\n                    <p className=\"video__view\">{this.props.views} views</p>\r\n                    <p className=\"video__detail--p\"><img src='/Assets/Icons/Thumbs Up.svg' alt='Thumbs Up'/>{this.props.thumbsUp}</p>\r\n                    <p className=\"video__detail--p\"><img src='/Assets/Icons/Thumbs Down.svg' alt='Thumbs Down' />{this.props.thumbsDown}</p>\r\n                    <p className=\"video__detail--p\"><img src='/Assets/Icons/Share.svg' alt='Share' />SHARE</p>\r\n                </div>\r\n                <div className=\"video__publisher\">\r\n                    <img className=\"video__publisher--pic\" alt='' />\r\n                    <div className=\"video__publisher--info\">\r\n                        <h4>{this.props.channel}</h4>\r\n                        <h5>'Published on Oct 14, 2015'</h5>\r\n                    </div>\r\n                    <button className=\"video__subscribe\"><span>SUBSCRIBE</span><span className=\"video__subscribe--view\">{this.props.subscriberCount}</span></button>\r\n                </div>\r\n               \r\n                <p className=\"comments__showmore\">SHOW MORE</p>\r\n                <AddComment id = {this.props.id} commentHandler={this.props.commentHandler}/>\r\n                <CommentDisplay currentVideo = {this.props.comments}/>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainVideo;","import React, {Component} from 'react';\r\nimport MainVideo from './mainVideo';\r\n\r\nclass Left extends Component\r\n{\r\n    render()\r\n    {\r\n        let mainVideo = this.props.currentVideo;\r\n        return (  \r\n                    <MainVideo title = {mainVideo.title} \r\n                    views = {mainVideo.views}\r\n                    thumbsUp = {mainVideo.thumbsUp}\r\n                    thumbsDown = {mainVideo.thumbsDown}\r\n                    channel = {mainVideo.channel}\r\n                    subscriberCount = {mainVideo.subscriberCount}\r\n                    video = {mainVideo.video}\r\n                    comments={mainVideo.comments}\r\n                    id={mainVideo.id}\r\n                    commentHandler={this.props.commentHandler}\r\n                     />\r\n        )\r\n                    \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Left;","import React from 'react';\r\n\r\nclass Video extends React.Component\r\n{\r\n    \r\n    render()\r\n    {\r\n        \r\n        return (\r\n            <div className=\"videoCard\">\r\n                <div className=\"videoCard__wrapper\">\r\n                    <img className=\"videoCard__image\" src={this.props.image} alt={this.props.title} />\r\n                    <p className=\"videoCard__time\">{this.props.duration}</p>\r\n                </div>\r\n                <div className=\"videoCard__info\">\r\n                    <h4>{this.props.title}</h4>\r\n                    <h5>{this.props.channel}</h5>\r\n                    <h5>{this.props.views + ' views'}</h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Video;","import React from 'react';\r\nimport Video from './video';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass  Sidebar extends React.Component\r\n{\r\n    render()\r\n    {\r\n        let videos = this.props.videoArray;\r\n        \r\n        return (<section className=\"sidebar\">\r\n            <p className=\"sidebar__title\">Up Next</p>\r\n            {(videos).map((video, i) => {\r\n                \r\n                return (<Link key={i} to={'/videos/' + video.id}><Video key ={i} \r\n                    image={video.image}\r\n                    title = {video.title}\r\n                    channel = {video.channel}\r\n                    duration = {video.duration}\r\n                    views = {video.views}\r\n                    id= {video.id} \r\n                    /></Link>)        \r\n            }\r\n            )\r\n            }\r\n            \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react'\r\nimport Left from './left';\r\nimport Sidebar from './Sidebar';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidUpdate(prevProp, preState )\r\n  {\r\n    if(prevProp.match.params.id !== this.props.match.params.id)\r\n    {\r\n      this.props.onIdChange(this.props.match.params.id);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n          <Left currentVideo= {this.props.mainVideo}  commentHandler={this.props.commentHandler}/>\r\n          <div className=\"left-wrapper\">\r\n            <Sidebar videoArray = {this.props.videos} />\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Main);","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/header';\nimport Upload from './Components/Upload';\nimport Main from './Components/Main';\nimport {BrowserRouter as Router, Route, Switch, Redirect,withRouter} from 'react-router-dom';\nimport AddComment from './Components/AddComment';\n\nlet baseUrl= 'http://localhost:8080';\n\nclass App extends Component {\n  constructor(){\n  super();\n  }\n  state = {\n    videos:[],\n    mainVideo: {\n      id: 0,\n      title: \"Toronto Blue Jays vs Boston Red Sox Highlights || July 14, 2018\",\n      description: \"The Red Sox looked like they were about to lose this one, trailing by a run heading into the 9th, but back-to-back doubles by Xander Bogaerts and Jackie Bradley Jr. tied the game at 2 a piece. While Boston couldn't end it in the 9th, the 10th was a different story. Mookie Betts reached on an error by Lourdes Gurriel Jr., and after a single by Brock Holt and an intentional walk to JD Martinez, the stage was set for Bogaerts with the bases loaded. He took full advantage of the situation, hitting a grand slam to walk it off for the Red Sox, and to take the game by a final score of 6-2.\",\n      channel: \"MLB\",\n      views: \"14934\",\n      duration: \"11:31\",\n      image: \"https://i.imgur.com/3WPEmCJ.jpeg\",\n      video: \"https://project-2-api.herokuapp.com/stream\",\n      thumbsUp: 78634,\n      thumbsDown: 213,\n      subscriberCount: \"1.2M\",\n      comments: [\n        {\n            name: \"Nigel\",\n            comment: \"Never gonna give you up...\",\n            \"id\": 0,\n            \"timestamp\": 1530744338878\n        },\n        {\n            name: \"Ian\",\n            comment: \"You could make $5000 a day too!\",\n            \"id\": 1,\n            \"timestamp\": 1530744338878\n        }\n    ]\n     }\n  }\n  componentDidMount()\n  {\n    \n    let query = '/videos';\n\n    let promise = fetch(baseUrl + query + '?api_key=c1a04dd4-7ee0-41b1-9822-b92dcec3b769');\n    promise.then(response => {return response.json();})\n    .then(data => {return this.setState({videos:data});});\n  }\n\n  handleIdChange = (id)=>\n  {\n\n    fetch(`${baseUrl}/videos/${id}?api_key=c1a04dd4-7ee0-41b1-9822-b92dcec3b769`)\n    .then(response => {return response.json();})\n    .then(video => {return this.setState({mainVideo:video});});\n  }\n\n  onCommentChange = (name,comment,commentId,id) =>\n  {\n    \n    let init= {\n      method:'POST',\n      body: JSON.stringify({name:name, comment:comment, id:commentId}),                              \n      headers:{'Content-Type':'application/json'}\n    }\n\n  fetch(`${baseUrl}/videos/${id}/comments?api_key=c1a04dd4-7ee0-41b1-9822-b92dcec3b769`,init)\n  .then(res=> res.json())\n  .then((res2) =>{console.log(res2); \n    ;});\n\n    fetch(`${baseUrl}/videos/${id}?api_key=c1a04dd4-7ee0-41b1-9822-b92dcec3b769`)\n    .then(response => {return response.json();})\n    .then(video => {return this.setState({mainVideo:video});}); \n  }  \n\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n          <Router>\n            <div>\n              <Header />\n              <Switch>\n                <Route path='/videos/:id' render={() => <Main onIdChange={this.handleIdChange} commentHandler={this.onCommentChange.bind(this)} {...this.state}/>}/>                \n                <Route path='/videos/:id/comments' render={()=> <AddComment />} />\n                <Route path='/Upload' component={Upload} />\n                <Route path='/'  render={() => <Redirect to={'/videos/0'}/>}/>\n              </Switch>\n            </div>\n          </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}